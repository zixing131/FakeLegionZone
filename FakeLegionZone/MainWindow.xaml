<Window x:Class="FakeLegionZone.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:FakeLegionZone"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:FakeLegionZone.Model"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="FakeLegionZone"
        Width="800"
        Height="670"
        Margin="0"
        Padding="0"
        d:DataContext="{d:DesignInstance Type={x:Type model:PerformMointorData}}"
        AllowsTransparency="True"
        Background="#191d23"
        BorderBrush="#202020"
        BorderThickness="1"
        Icon="images/legion_logo.ico"
        ResizeMode="CanResize"
        Style="{x:Null}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        mc:Ignorable="d"
        >
    <Window.Resources>

        <!--  1.确定参数  -->
        <!--  纵向滚动条宽度  -->
        <sys:Double x:Key="VerticalScrollBarThickness">8</sys:Double>
        <!--  纵向轨道背景色  -->
        <SolidColorBrush x:Key="VerticalTrackBackgroundBrush" Color="Transparent" />
        <!--  纵向滑块颜色  -->
        <SolidColorBrush x:Key="VerticalTrackThumbBackgroundBrush" Color="#cccccc" />
        <!--  纵向滑块圆角  -->
        <CornerRadius x:Key="VerticalThumbCornerRadius">2</CornerRadius>
        <!--  横向滚动条宽度  -->
        <sys:Double x:Key="HorizontalScrollBarThickness">4</sys:Double>
        <!--  横向轨道背景色  -->
        <SolidColorBrush x:Key="HorizontalTrackBackgroundBrush" Color="Transparent" />
        <!--  横向滑块颜色  -->
        <SolidColorBrush x:Key="HorizontalTrackThumbBackgroundBrush" Color="#cccccc" />
        <!--  横向滑块圆角  -->
        <CornerRadius x:Key="HorizontalThumbCornerRadius">2</CornerRadius>

        <!--  2.定义Style  -->
        <Style x:Key="ScrollStyle_Mobile" TargetType="ScrollBar">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="{DynamicResource HorizontalScrollBarThickness}" />
                    <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="{DynamicResource VerticalScrollBarThickness}" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Width" Value="8" />
                    <Setter Property="Opacity" Value="0.8" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Opacity" Value="0.6" />
                    <Setter Property="Width" Value="5" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
                </Trigger>

            </Style.Triggers>
        </Style>

        <!--  3.定义template  -->
        <!--  纵向滚动条template  -->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Border Width="{DynamicResource VerticalScrollBarThickness}" Background="{DynamicResource VerticalTrackBackgroundBrush}">
                <Track Name="PART_Track" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Focusable="False">
                            <RepeatButton.Template>
                                <ControlTemplate>
                                    <Border Background="Transparent">
                                    </Border>
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Width="{TemplateBinding Width}" Focusable="False">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Border Background="{DynamicResource VerticalTrackThumbBackgroundBrush}" CornerRadius="{DynamicResource VerticalThumbCornerRadius}" />
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Focusable="False">
                            <RepeatButton.Template>
                                <ControlTemplate>
                                    <Border Background="Transparent">
                                    </Border>
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
            </Border>
        </ControlTemplate>
        <!--  横向滚动条template  -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid Background="{DynamicResource HorizontalTrackBackgroundBrush}">
                <Track Name="PART_Track"
                       Grid.Column="1"
                       IsDirectionReversed="False"
                       >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Focusable="False">
                            <RepeatButton.Template>
                                <ControlTemplate>
                                    <Border Background="Transparent">
                                    </Border>
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Height="{TemplateBinding Height}">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Border Background="{DynamicResource HorizontalTrackThumbBackgroundBrush}" CornerRadius="{DynamicResource HorizontalThumbCornerRadius}" />
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Focusable="False">
                            <RepeatButton.Template>
                                <ControlTemplate>
                                    <Border Background="Transparent">
                                    </Border>
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ckb2temp" TargetType="CheckBox">
            <StackPanel Background="Transparent"
                        FocusVisualStyle="{x:Null}"
                        Orientation="Horizontal"
                        >
                <Grid x:Name="gd"
                      Width="64"
                      Height="40"
                      Background="Transparent"
                      FocusVisualStyle="{x:Null}"
                      >
                    <Image x:Name="selectImg1"
                           RenderOptions.BitmapScalingMode="Fant"
                           Source="images/check2.png"
                           UseLayoutRounding="True"
                           >
                    </Image>
                    <Image x:Name="selectImg2"
                           RenderOptions.BitmapScalingMode="Fant"
                           Source="images/check1.png"
                           UseLayoutRounding="True"
                           Visibility="Hidden"
                           >
                    </Image>
                </Grid>
                <ContentPresenter Margin="5,0,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  RecognizesAccessKey="True"
                                  TextBlock.Foreground="Black"
                                  >
                </ContentPresenter>
            </StackPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Visible">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Collapsed">
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Visible">
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="gd" Property="Background" Value="LightGray">
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ckb1temp" TargetType="CheckBox">
            <StackPanel Background="Transparent"
                        FocusVisualStyle="{x:Null}"
                        Orientation="Horizontal"
                        >
                <Grid x:Name="gd"
                      Width="32"
                      Height="32"
                      Background="Transparent"
                      FocusVisualStyle="{x:Null}"
                      >
                    <Image x:Name="selectImg1"
                           RenderOptions.BitmapScalingMode="Fant"
                           Source="images/checkbox_disable_36.png"
                           UseLayoutRounding="True"
                           >
                    </Image>
                    <Image x:Name="selectImg2"
                           RenderOptions.BitmapScalingMode="Fant"
                           Source="images/checkbox_checked_36.png"
                           UseLayoutRounding="True"
                           Visibility="Hidden"
                           >
                    </Image>
                </Grid>
                <ContentPresenter Margin="5,0,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  RecognizesAccessKey="True"
                                  TextBlock.Foreground="#cccccc"
                                  >
                </ContentPresenter>
            </StackPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Visible">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Collapsed">
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Visible">
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="gd" Property="Background" Value="LightGray">
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="rdb1temp" TargetType="RadioButton">
            <StackPanel Background="Transparent"
                        FocusVisualStyle="{x:Null}"
                        Orientation="Horizontal"
                        >
                <Grid x:Name="gd"
                      Width="40"
                      Height="40"
                      Background="Transparent"
                      FocusVisualStyle="{x:Null}"
                      >
                    <Image x:Name="selectImg1"
                           RenderOptions.BitmapScalingMode="Fant"
                           Source="images/radio2.png"
                           UseLayoutRounding="True"
                           >
                    </Image>
                    <Image x:Name="selectImg2"
                           RenderOptions.BitmapScalingMode="Fant"
                           Source="images/radio1.png"
                           UseLayoutRounding="True"
                           Visibility="Hidden"
                           >
                    </Image>
                </Grid>
                <ContentPresenter Margin="5,0,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  RecognizesAccessKey="True"
                                  TextBlock.Foreground="#cccccc"
                                  >
                </ContentPresenter>
            </StackPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Visible">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Collapsed">
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Visible">
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="selectImg2" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="selectImg1" Property="Visibility" Value="Collapsed">
                    </Setter>
                    <Setter TargetName="gd" Property="Background" Value="LightGray">
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50">
            </RowDefinition>
            <RowDefinition Height="*">
            </RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0"
              Background="Transparent"
              MouseLeftButtonDown="Grid_MouseLeftButtonDown"
              >
            <StackPanel Margin="0,0,20,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        >

                <Button Name="btn_min"
                        Width="32"
                        Height="32"
                        Margin="0,0,10,0"
                        Click="btn_min_Clik"
                        >
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="gridC">
                                <Grid.Background>
                                    <ImageBrush ImageSource="images/min1.png">
                                    </ImageBrush>
                                </Grid.Background>
                                <ContentPresenter Margin="6,2" Focusable="False">
                                </ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="gridC" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="images/min2.png">
                                            </ImageBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="gridC" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="images/min1.png">
                                            </ImageBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>

                </Button>
                <Button Name="btn_close"
                        Width="32"
                        Height="32"
                        Click="btn_close_Clik"
                        >
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="gridC">
                                <Grid.Background>
                                    <ImageBrush ImageSource="images/button_close_normal_32.png">
                                    </ImageBrush>
                                </Grid.Background>
                                <ContentPresenter Margin="6,2" Focusable="False">
                                </ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="gridC" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="images/button_close_hover_32.png">
                                            </ImageBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="gridC" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="images/button_close_click_32.png">
                                            </ImageBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>

                </Button>
            </StackPanel>

        </Grid>

        <Grid Grid.Row="1" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="50">
                </RowDefinition>
                <RowDefinition Height="*">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid Background="Transparent" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="20,0,0,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="26"
                               Foreground="#cccccc"
                               Text="性能监控总开关"
                               >
                    </TextBlock>
                    <CheckBox Name="checkall"
                              Click="checkall_Click"
                              Template="{StaticResource ckb2temp}"
                              >
                    </CheckBox>
                    <TextBlock Margin="20,0,0,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="26"
                               Foreground="#cccccc"
                               Text="日志开关"
                               >
                    </TextBlock>
                    <CheckBox Name="logenable"
                              Click="logenable_Click"
                              Template="{StaticResource ckb2temp}"
                              >

                    </CheckBox>


                </StackPanel>

                <TextBlock Grid.Row="4"
                           Margin="0,0,40,0"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontSize="22"
                           Foreground="#7E7E7E"
                           >
                    <Hyperlink Click="Hyperlink_Click" TextDecorations="None">性能监控支持的游戏列表</Hyperlink>
                </TextBlock>

            </Grid>

            <GroupBox Grid.Row="1"
                      Margin="10"
                      BorderBrush="#cccccc"
                      FontSize="22"
                      Foreground="#cccccc"
                      Header="性能监控设置"
                      >
                <ScrollViewer>
                    <ScrollViewer.Resources>
                        <Style BasedOn="{StaticResource ScrollStyle_Mobile}" TargetType="ScrollBar">
                        </Style>
                    </ScrollViewer.Resources>
                    <StackPanel Margin="5">
                        <StackPanel Margin="10">
                            <StackPanel Margin="0,5" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center"
                                           Foreground="LightGray"
                                           Text="监控内容设置"
                                           >
                                </TextBlock>
                                <Button Width="120"
                                        Height="40"
                                        Margin="20,0"
                                        Click="Button_Click"
                                        Foreground="LightGray"
                                        ToolTip="点击后刷新游戏内部的状态显示栏"
                                        >
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="bd"
                                                    Background="#191d23"
                                                    BorderBrush="Gray"
                                                    BorderThickness="1"
                                                    CornerRadius="20"
                                                    >
                                                <TextBlock HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           Text="重载配置"
                                                           >

                                                </TextBlock>

                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="bd" Property="Background" Value="#333333">
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="bd" Property="Background" Value="#191d23">
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </StackPanel>


                            <StackPanel Margin="0,5"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal"
                                        >
                                <TextBlock VerticalAlignment="Center" Text="基本">
                                </TextBlock>
                                <CheckBox Margin="15,0,0,0"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding FPS, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                          Template="{StaticResource ckb1temp}"
                                          >
                                    FPS
                                </CheckBox>
                            </StackPanel>


                            <WrapPanel Margin="0,0"
                                       VerticalAlignment="Center"
                                       Orientation="Horizontal"
                                       >
                                <TextBlock Margin="0,10,0,0"
                                           VerticalAlignment="Top"
                                           Text="CPU"
                                           >
                                </TextBlock>
                                <WrapPanel Margin="0,0"
                                           VerticalAlignment="Center"
                                           Orientation="Horizontal"
                                           >
                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding CPU.Clock, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        频率(MHz)
                                    </CheckBox>


                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding CPU.Usage, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        占用率(%)
                                    </CheckBox>

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding CPU.Temperature, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        温度(℃)
                                    </CheckBox>

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding CPU.Power, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        功耗(W)
                                    </CheckBox>

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding CPU.FanSpeed, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        风扇转速(RPM)
                                    </CheckBox>
                                </WrapPanel>
                            </WrapPanel>

                            <WrapPanel Margin="0,0"
                                       VerticalAlignment="Center"
                                       Orientation="Horizontal"
                                       >
                                <TextBlock Margin="0,10,0,0"
                                           VerticalAlignment="Top"
                                           Text="GPU"
                                           >
                                </TextBlock>
                                <WrapPanel Margin="0,5"
                                           VerticalAlignment="Center"
                                           Orientation="Horizontal"
                                           >

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding GPU.Clock, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        频率(MHz)
                                    </CheckBox>


                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding GPU.Usage, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        占用率(%)
                                    </CheckBox>

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding GPU.Temperature, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        温度(℃)
                                    </CheckBox>

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding GPU.Power, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        功耗(W)
                                    </CheckBox>

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding GPU.FanSpeed, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        风扇转速(RPM)
                                    </CheckBox>

                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding GPU.Mem_Usage, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        显存占用率(%)
                                    </CheckBox>

                                </WrapPanel>
                            </WrapPanel>




                            <WrapPanel Margin="0,0"
                                       VerticalAlignment="Center"
                                       Orientation="Horizontal"
                                       >
                                <TextBlock Margin="0,10,0,0"
                                           VerticalAlignment="Top"
                                           Text="内存"
                                           >
                                </TextBlock>
                                <WrapPanel Margin="0,5"
                                           VerticalAlignment="Center"
                                           Orientation="Horizontal"
                                           >
                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding MEM.Clock, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        内存频率(MHz)
                                    </CheckBox>
                                    <CheckBox Margin="15,5,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding MEM.Usage, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              Template="{StaticResource ckb1temp}"
                                              >
                                        内存占用(%)
                                    </CheckBox>
                                </WrapPanel>
                            </WrapPanel>

                        </StackPanel>

                        <StackPanel Margin="10">
                            <TextBlock Margin="0,5" Text="监控内容样式">
                            </TextBlock>

                            <WrapPanel Margin="0,0"
                                       VerticalAlignment="Center"
                                       Orientation="Horizontal"
                                       >
                                <RadioButton Width="200"
                                             Margin="15,5,0,0"
                                             VerticalAlignment="Center"
                                             GroupName="style1"
                                             IsChecked="{Binding Orientation, Converter={StaticResource IntToBoolRev}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Template="{StaticResource rdb1temp}"
                                             >
                                    横向样式
                                </RadioButton>

                                <RadioButton Width="200"
                                             Margin="15,5,0,0"
                                             VerticalAlignment="Center"
                                             GroupName="style1"
                                             IsChecked="{Binding Orientation, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Template="{StaticResource rdb1temp}"
                                             >
                                    竖向样式
                                </RadioButton>

                            </WrapPanel>

                            <WrapPanel Margin="0,0"
                                       VerticalAlignment="Center"
                                       Orientation="Horizontal"
                                       >
                                <RadioButton Width="200"
                                             Margin="15,5,0,0"
                                             VerticalAlignment="Center"
                                             GroupName="style2"
                                             IsChecked="{Binding Location, Converter={StaticResource IntToBoolRev}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Template="{StaticResource rdb1temp}"
                                             >
                                    屏幕左上角
                                </RadioButton>

                                <RadioButton Width="200"
                                             Margin="15,5,0,0"
                                             VerticalAlignment="Center"
                                             GroupName="style2"
                                             IsChecked="{Binding Location, Converter={StaticResource IntToBool}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Template="{StaticResource rdb1temp}"
                                             >
                                    屏幕右上角
                                </RadioButton>

                            </WrapPanel>



                            <WrapPanel Margin="0,0"
                                       VerticalAlignment="Center"
                                       Orientation="Horizontal"
                                       >
                                <RadioButton Width="200"
                                             Margin="15,5,0,0"
                                             VerticalAlignment="Center"
                                             GroupName="style3"
                                             IsChecked="{Binding FontSize, Converter={StaticResource Font2Size1}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Template="{StaticResource rdb1temp}"
                                             >
                                    较小字体
                                </RadioButton>

                                <RadioButton Width="200"
                                             Margin="15,5,0,0"
                                             VerticalAlignment="Center"
                                             GroupName="style3"
                                             IsChecked="{Binding FontSize, Converter={StaticResource Font2Size2}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Template="{StaticResource rdb1temp}"
                                             >
                                    标准字体
                                </RadioButton>

                                <RadioButton Width="200"
                                             Margin="15,5,0,0"
                                             VerticalAlignment="Center"
                                             GroupName="style3"
                                             IsChecked="{Binding FontSize, Converter={StaticResource Font2Size3}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Template="{StaticResource rdb1temp}"
                                             >
                                    较大字体
                                </RadioButton>

                            </WrapPanel>

                        </StackPanel>

                    </StackPanel>

                </ScrollViewer>
            </GroupBox>

        </Grid>

        <Grid Name="gridMsg" Grid.RowSpan="2">
        </Grid>

    </Grid>
</Window>
